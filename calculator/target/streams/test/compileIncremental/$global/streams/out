[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/src/test/scala/TestSingleOperation.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/src/test/scala/TestSingleOperation.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/target/scala-2.12/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.7[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.7[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 12628353 for Scala compiler version 2.12.7[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/jre/classes:/Users/sonnymalick/.sbt/boot/scala-2.12.7/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/target/scala-2.12/test-classes:/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/target/scala-2.12/classes:/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/lib/ant-javafx.jar:/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/lib/javafx-mx.jar:/Users/sonnymalick/Desktop/softdev/UB/CSE116/calculator/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home/lib/javafx-mx.jar:/Users/sonnymalick/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.5.jar:/Users/sonnymalick/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.5.jar:/Users/sonnymalick/.sbt/boot/scala-2.12.7/lib/scala-reflect.jar:/Users/sonnymalick/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.6.jar:/Users/sonnymalick/.ivy2/cache/org.scalafx/scalafx_2.12/jars/scalafx_2.12-11-R16.jar:/Users/sonnymalick/.ivy2/cache/com.typesafe.play/play-json_2.12/jars/play-json_2.12-2.7.1.jar:/Users/sonnymalick/.ivy2/cache/com.typesafe.play/play-functional_2.12/jars/play-functional_2.12-2.7.1.jar:/Users/sonnymalick/.ivy2/cache/org.typelevel/macro-compat_2.12/jars/macro-compat_2.12-1.1.1.jar:/Users/sonnymalick/.ivy2/cache/joda-time/joda-time/jars/joda-time-2.10.1.jar:/Users/sonnymalick/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.8.jar:/Users/sonnymalick/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.9.8.jar:/Users/sonnymalick/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.9.8.jar:/Users/sonnymalick/.ivy2/cache/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/bundles/jackson-datatype-jdk8-2.9.8.jar:/Users/sonnymalick/.ivy2/cache/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/bundles/jackson-datatype-jsr310-2.9.8.jar:/Users/sonnymalick/.ivy2/cache/org.scalaj/scalaj-http_2.12/jars/scalaj-http_2.12-2.4.1.jar:/Users/sonnymalick/.ivy2/cache/org.openjfx/javafx-controls/jars/javafx-controls-11.0.2.jar:/Users/sonnymalick/.ivy2/cache/org.openjfx/javafx-graphics/jars/javafx-graphics-11.0.2.jar:/Users/sonnymalick/.ivy2/cache/org.openjfx/javafx-base/jars/javafx-base-11.0.2.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.850770611 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from TestSingleOperation...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(TestSingleOperation,ModifiedNames(changes = UsedName(!==,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(notify,[Default]), UsedName(registerTest,[Default]), UsedName(cancel,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(test,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(execute$default$5,[Default]), UsedName(testsFor,[Default]), UsedName(##,[Default]), UsedName($init$,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(equals,[Default]), UsedName(execute,[Default]), UsedName(testNames,[Default]), UsedName(assertionsHelper,[Default]), UsedName(TestSingleOperation;init;,[Default]), UsedName(eq,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(execute$default$3,[Default]), UsedName(info,[Default]), UsedName(alert,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(testDataFor,[Default]), UsedName(===,[Default]), UsedName(fail,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(ignore,[Default]), UsedName(note,[Default]), UsedName(execute$default$1,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(assertCompiles,[Default]), UsedName(runTests,[Default]), UsedName(withFixture,[Default]), UsedName(succeed,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(execute$default$4,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(runNestedSuites,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(trap,[Default]), UsedName(styleName,[Default]), UsedName(defaultEquality,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$2,[Default]), UsedName(equalDoubles,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(clone,[Default]), UsedName(Equalizer,[Default]), UsedName(suiteName,[Default]), UsedName(suiteId,[Default]), UsedName(assertResult,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(tags,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(EPSILON,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assert,[Default]), UsedName(getClass,[Default]), UsedName(assertThrows,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(synchronized,[Default]), UsedName(run,[Default]), UsedName(assertTypeError,[Default]), UsedName(execute$default$7,[Default]), UsedName(expectedTestCount,[Default]), UsedName(markup,[Default]), UsedName(intercept,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(createCatchReporter,[Default]), UsedName(finalize,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(notifyAll,[Default]), UsedName(pending,[Default]), UsedName($isInstanceOf,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(assume,[Default]), UsedName(NoArgTest,[Default]), UsedName(nestedSuites,[Default]), UsedName(withClue,[Default]), UsedName(runTest,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(rerunner,[Default]), UsedName(TestSingleOperation,[Default]), UsedName(registerIgnoredTest,[Default]))) invalidates 1 classes due to The TestSingleOperation has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(convertToEqualizer,[Implicit]), UsedName(unconstrainedEquality,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from calculator.tests.TestSingleOperation...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(calculator.tests.TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(calculator.tests.TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(calculator.tests.TestSingleOperation,ModifiedNames(changes = UsedName(!==,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(notify,[Default]), UsedName(registerTest,[Default]), UsedName(cancel,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(test,[Default]), UsedName(calculator;tests;TestSingleOperation;init;,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(execute$default$5,[Default]), UsedName(testsFor,[Default]), UsedName(##,[Default]), UsedName($init$,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(equals,[Default]), UsedName(execute,[Default]), UsedName(testNames,[Default]), UsedName(assertionsHelper,[Default]), UsedName(eq,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(execute$default$3,[Default]), UsedName(info,[Default]), UsedName(alert,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(testDataFor,[Default]), UsedName(===,[Default]), UsedName(fail,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(ignore,[Default]), UsedName(note,[Default]), UsedName(execute$default$1,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(assertCompiles,[Default]), UsedName(runTests,[Default]), UsedName(withFixture,[Default]), UsedName(succeed,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(execute$default$4,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(runNestedSuites,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(trap,[Default]), UsedName(styleName,[Default]), UsedName(defaultEquality,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$2,[Default]), UsedName(equalDoubles,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(clone,[Default]), UsedName(Equalizer,[Default]), UsedName(suiteName,[Default]), UsedName(suiteId,[Default]), UsedName(assertResult,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(tags,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(EPSILON,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assert,[Default]), UsedName(getClass,[Default]), UsedName(assertThrows,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(synchronized,[Default]), UsedName(run,[Default]), UsedName(assertTypeError,[Default]), UsedName(execute$default$7,[Default]), UsedName(expectedTestCount,[Default]), UsedName(markup,[Default]), UsedName(intercept,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(createCatchReporter,[Default]), UsedName(finalize,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(notifyAll,[Default]), UsedName(pending,[Default]), UsedName($isInstanceOf,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(assume,[Default]), UsedName(NoArgTest,[Default]), UsedName(nestedSuites,[Default]), UsedName(withClue,[Default]), UsedName(runTest,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(rerunner,[Default]), UsedName(TestSingleOperation,[Default]), UsedName(registerIgnoredTest,[Default]))) invalidates 1 classes due to The calculator.tests.TestSingleOperation has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(convertToEqualizer,[Implicit]), UsedName(unconstrainedEquality,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(calculator.tests.TestSingleOperation)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
